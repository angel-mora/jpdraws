{"ast":null,"code":"var _jsxFileName = \"/Users/karina/Desktop/projects/jpdraws/client/src/client/components/CheckoutForm.js\";\nimport React, { Component } from 'react';\nimport { CardElement, injectStripe } from 'react-stripe-elements';\n\nclass CheckoutForm extends Component {\n  constructor(props) {\n    super(props);\n\n    this.handleChange = event => {\n      this.setState({\n        [event.target.name]: event.target.value\n      });\n    };\n\n    this.handleSubmit = async event => {\n      event.preventDefault();\n\n      try {\n        let _ref = await this.props.stripe.createToken({\n          name: this.state.name\n        }),\n            token = _ref.token;\n\n        let amount = this.state.amount;\n        let response = await fetch('http://localhost:9000/charge', {\n          method: 'POST',\n          headers: {\n            \"Content-Type\": \"text/plain\"\n          },\n          body: token.id + \"&\" + amount\n        });\n\n        if (response.ok) {\n          this.setState({\n            complete: true\n          });\n          this.props.cart.forEach(item => {\n            let user_id = this.props.user.id;\n            let drawing_id = item.id;\n            fetch('http://localhost:3000/transactions', {\n              method: 'POST',\n              headers: {\n                'Content-Type': 'application/json',\n                'Accept': 'application/json'\n              },\n              body: JSON.stringify({\n                user_id,\n                drawing_id\n              })\n            }).then(res => res.json()).then(data => {\n              this.props.getUser();\n            });\n          });\n        }\n\n        ; // redirect, clear inputs, thank alert\n      } catch (event) {\n        throw event;\n      }\n    };\n\n    this.state = {\n      complete: false,\n      name: \"\",\n      amount: this.props.totalAmount(this.props.cart)\n    };\n  }\n\n  render() {\n    if (this.state.complete) return React.createElement(\"h1\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 61\n      },\n      __self: this\n    }, \"Purchase Complete\");\n    return React.createElement(\"main\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 63\n      },\n      __self: this\n    }, React.createElement(\"form\", {\n      onSubmit: this.handleSubmit,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 64\n      },\n      __self: this\n    }, React.createElement(\"input\", {\n      type: \"text\",\n      value: this.state.name,\n      name: \"name\",\n      placeholder: \"Full Name\",\n      onChange: this.handleChange,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 65\n      },\n      __self: this\n    }), React.createElement(CardElement, {\n      className: \"cardElement\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 72\n      },\n      __self: this\n    }), React.createElement(\"input\", {\n      type: \"submit\",\n      value: \"Purchase\",\n      className: \"btn-item\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 73\n      },\n      __self: this\n    })));\n  }\n\n}\n\nexport default injectStripe(CheckoutForm);","map":{"version":3,"sources":["/Users/karina/Desktop/projects/jpdraws/client/src/client/components/CheckoutForm.js"],"names":["React","Component","CardElement","injectStripe","CheckoutForm","constructor","props","handleChange","event","setState","target","name","value","handleSubmit","preventDefault","stripe","createToken","state","token","amount","response","fetch","method","headers","body","id","ok","complete","cart","forEach","item","user_id","user","drawing_id","JSON","stringify","then","res","json","data","getUser","totalAmount","render"],"mappings":"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","sourcesContent":["import React, {Component} from 'react';\nimport {CardElement, injectStripe} from 'react-stripe-elements';\n\nclass CheckoutForm extends Component {\n  constructor(props) {\n    super(props)\n    this.state = {\n      complete: false,\n      name: \"\",\n      amount: this.props.totalAmount(this.props.cart)\n    }\n  }\n\n  handleChange = (event) => {\n    this.setState({\n      [event.target.name]: event.target.value\n    })\n  }\n\n  handleSubmit = async (event) => {\n    event.preventDefault()\n    try {\n      let { token } = await this.props.stripe.createToken({ name: this.state.name })\n      let amount = this.state.amount\n      let response = await fetch('http://localhost:9000/charge', {\n        method: 'POST',\n        headers: {\n          \"Content-Type\": \"text/plain\"\n        },\n        body: token.id + \"&\" + amount\n      })\n      if (response.ok) {\n        this.setState({complete: true})\n        this.props.cart.forEach((item) => {\n          let user_id = this.props.user.id\n          let drawing_id = item.id\n          fetch('http://localhost:3000/transactions', {\n            method: 'POST',\n            headers: {\n              'Content-Type': 'application/json',\n              'Accept': 'application/json'\n            },\n            body: JSON.stringify({\n              user_id,\n              drawing_id\n            })\n          })\n          .then(res => res.json())\n          .then(data => {\n            this.props.getUser()\n          })\n        })\n      };\n      // redirect, clear inputs, thank alert\n    } catch (event) {\n      throw event\n    }\n  }\n\n  render(){\n    if (this.state.complete) return <h1>Purchase Complete</h1>;\n    return (\n      <main>\n        <form onSubmit={ this.handleSubmit }>\n          <input\n            type=\"text\"\n            value={ this.state.name }\n            name=\"name\"\n            placeholder=\"Full Name\"\n            onChange={ this.handleChange }\n          />\n        <CardElement className=\"cardElement\" />\n          <input type=\"submit\" value=\"Purchase\" className=\"btn-item\"/>\n        </form>\n      </main>\n\n    )\n  }\n}\n\nexport default injectStripe(CheckoutForm);\n"]},"metadata":{},"sourceType":"module"}